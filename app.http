### Car Wash API Test Requests

@baseUrl = http://localhost:8080
@contentType = application/json
@RefreshToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJiYjhkMmExYi1jYzg4LTRhNTUtYTlmYy03ZTNiMjk1MmM1MjciLCJlbWFpbCI6ImFuZHJlYXN0YWlsYXM5NjlAZ21haWwuY29tIiwicm9sZSI6ImFkbWluIiwidXNlcm5hbWUiOiJUaXR1cyB3YWl0aXR1IiwiaWF0IjoxNzUyNDgwMzkyLCJleHAiOjE3NTMzNDQzOTJ9.JgvezaPlt0IuFiE6Qn-SixC53sduecdaV-wL3hCzdMU

@AccessToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJiYjhkMmExYi1jYzg4LTRhNTUtYTlmYy03ZTNiMjk1MmM1MjciLCJlbWFpbCI6ImFuZHJlYXN0YWlsYXM5NjlAZ21haWwuY29tIiwicm9sZSI6ImFkbWluIiwidXNlcm5hbWUiOiJUaXR1cyB3YWl0aXR1IiwiaWF0IjoxNzUyNDgzMjk2LCJleHAiOjE3NTMzNDcyOTZ9.dX4dN_hjt70vN7_rTMfS1oE258Vc96tTF8hqsJ74j-Y
### ========== USERS ==========

### Get all users
GET {{baseUrl}}/bookings
Authorization: Bearer {{AccessToken}}

### Create a new user
POST {{baseUrl}}/users
Content-Type: {{contentType}}

{
  "username": "user",
  "email": "user@duck.com",
  "password": "12345678",
  "phone_number": "1234567890"
}

### Create a new user
POST {{baseUrl}}/users
Content-Type: {{contentType}}

{
  "username": "Titus waititu",
  "email": "andreastailas96@gmail.com",
  "password": "12345678",
  "phone_number": "1234567890"
}
### Get user by ID
GET {{baseUrl}}/users
Authorization: Bearer {{AccessToken}}

### Search users
GET {{baseUrl}}/users?search=john

### Update user
PATCH {{baseUrl}}/users/bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527
Content-Type: {{contentType}}

{
  "business_name": "John's Car Wash",
  "service_radius_km":45
  }

### Delete user
DELETE {{baseUrl}}/users/1

### ========== AUTH ==========

### Login user
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "user",
  "password": "12345678"
}

### Refresh token
GET {{baseUrl}}/auth/refresh?id=bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527
Authorization: Bearer {{RefreshToken}}

### ========== SERVICES ==========

### Create a new service
POST {{baseUrl}}/services
Content-Type: {{contentType}}

{
  "name": "Basic Car Wash",
  "price": 25.00,
  "description": "Basic exterior car wash with soap and rinse",
  "duration_minutes": 30,
  "is_mobile_service":true,
  "userId": "d7f74df6-caee-40fc-bc5b-3887a85636a5"
}

### Get all services
GET {{baseUrl}}/services


### Search services
GET {{baseUrl}}/services?search=wash

### Get services by user
GET {{baseUrl}}/services/user/1

### Get services by price range
GET {{baseUrl}}/services/price-range?minPrice=20&maxPrice=50

### Get service by ID
GET {{baseUrl}}/services/1

### Update service
PATCH {{baseUrl}}/services/38f62908-d41a-4339-916f-7d5a0bbc2a61
Content-Type: {{contentType}}

{
  "userId":"bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527"
}

### Delete service
DELETE {{baseUrl}}/services/1

### ========== BOOKINGS ==========

### Create a new booking
POST {{baseUrl}}/bookings
Content-Type: {{contentType}}

{
  "booking_time": "2025-07-15T10:00:00Z",
  "address": "123 Main St, City, State",
  "userId": "d7f74df6-caee-40fc-bc5b-3887a85636a5",
  "serviceId": "38f62908-d41a-4339-916f-7d5a0bbc2a61",
  "vehicleId": "166753b0-8fb7-4365-bd32-f2334b91098d"
  }

### Get all bookings
GET {{baseUrl}}/bookings

### Get bookings by status
GET {{baseUrl}}/bookings?status=pending

### Get booking statistics
GET {{baseUrl}}/bookings/stats

### Get bookings by user
GET {{baseUrl}}/bookings/user/d7f74df6-caee-40fc-bc5b-3887a85636a5

### Get bookings by service
GET {{baseUrl}}/bookings/service/1

### Get bookings by date range
GET {{baseUrl}}/bookings/date-range?startDate=2025-07-01&endDate=2025-07-31

### Get booking by ID
GET {{baseUrl}}/services

### Update booking
PATCH {{baseUrl}}/bookings/f2f4ab0f-da81-4b1e-9e4b-21f8e0cff609
Content-Type: {{contentType}}

{
  "vehicleId": "8f7587a8-85e8-4c86-8503-c2c1c5bb203c"
}

### Update booking status
PATCH {{baseUrl}}/bookings/1/status
Content-Type: {{contentType}}

{
  "status": "completed"
}

### Delete booking
DELETE {{baseUrl}}/services/3918f3f8-529d-4522-9e81-87d37f9c7256

### ========== FLEET ==========

### Create a new fleet vehicle
POST {{baseUrl}}/fleet
Authorization: Bearer {{AccessToken}}
Content-Type: {{contentType}}

{
  "image_url": "https://res.cloudinary.com/dhkwchmgl/image/upload/v1752563014/devon-janse-van-rensburg-yoqHLUayUTg-unsplash_cl2luu.jpg",
  "plate_number": "ABC-123",
  "model": "BMW 3 Series",
  "type": "Sedan",
  "color": "Red",
  "make": "BMW",
  "year": 2020,
  "next_service_due": "2025-08-01",
  "userId": "9a84a884-4e22-4e83-9fdb-b34a0418e1fd"
}

### Get all fleet vehicles
GET {{baseUrl}}/payments
Authorization: Bearer {{AccessToken}}

### Get fleet by status
GET {{baseUrl}}/fleet?status=available

### Search fleet
GET {{baseUrl}}/fleet?search=toyota

### Get fleet statistics
GET {{baseUrl}}/fleet/stats

### Get available vehicles
GET {{baseUrl}}/fleet/available

### Get vehicles by user
GET {{baseUrl}}/fleet/user/9a84a884-4e22-4e83-9fdb-b34a0418e1fd
Authorization: Bearer {{AccessToken}}

### Get vehicles by type
GET {{baseUrl}}/fleet/type/Service Vehicle

### Get vehicle by plate number
GET {{baseUrl}}/fleet/plate/ABC-123

### Get fleet vehicle by ID
GET {{baseUrl}}/fleet/1

### Update fleet vehicle
PATCH {{baseUrl}}/fleet/dcd8b2a6-6586-4f47-ac8d-5046f7a96824
Content-Type: {{contentType}}

{
  "next_service_due": "2025-08-01"
}

### Update vehicle status
PATCH {{baseUrl}}/fleet/1/status
Content-Type: {{contentType}}

{
  "status": "dispatched"
}

### Delete fleet vehicle
DELETE {{baseUrl}}/fleet/1

### ========== REVIEWS ==========

### Create a new review
POST {{baseUrl}}/reviews
Content-Type: {{contentType}}

{
  "rating": 3,
  "comment": "Average service, nothing special.",
  "userId": "bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527",
  "serviceId":"3918f3f8-529d-4522-9e81-87d37f9c7256"
}

### Get all reviews
GET {{baseUrl}}/reviews

### Get reviews by rating
GET {{baseUrl}}/reviews?rating=5

### Get review statistics
GET {{baseUrl}}/reviews/stats

### Clean up orphaned reviews (reviews without service relations)
DELETE {{baseUrl}}/reviews/cleanup/orphaned

### Get average rating
GET {{baseUrl}}/reviews/average-rating

### Get top reviews
GET {{baseUrl}}/reviews/top?limit=5

### Get recent reviews
GET {{baseUrl}}/reviews/recent?limit=10

### Get reviews by user
GET {{baseUrl}}/reviews/user/1

### Get review by ID
GET {{baseUrl}}/reviews/1

### Update review
PATCH {{baseUrl}}/reviews/1
Content-Type: {{contentType}}

{
  "rating": 4,
  "comment": "Good service, but could be better."
}

### Delete review
DELETE {{baseUrl}}/reviews/1

### ========== NOTIFICATIONS ==========

### Create a new notification
POST {{baseUrl}}/notifications
Content-Type: {{contentType}}

{
  "title": "Booking Confirmed",
  "message": "Your car wash booking has been confirmed for tomorrow at 10:00 AM",
  "type": "booking_confirmed",
  "priority": "high",
  "channels": ["in_app", "push"],
  "recipientId": "bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527",
  "bookingId": "5e2e8914-0286-40c4-a822-c6f23143969f"
}

### Get all notifications
GET {{baseUrl}}/bookings

### Get notifications by recipient
GET {{baseUrl}}/notifications?recipientId=bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527

### Get unread notifications
GET {{baseUrl}}/notifications?isRead=false

### Get notifications by type
GET {{baseUrl}}/notifications?type=booking_confirmed

### Get notifications with pagination
GET {{baseUrl}}/notifications?limit=10&offset=0

### Get unread count for user
GET {{baseUrl}}/notifications/user/bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527/unread-count

### Get notification stats for user
GET {{baseUrl}}/notifications/user/bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527/stats

### Get notification by ID
GET {{baseUrl}}/notifications/1

### Mark notification as read
PATCH {{baseUrl}}/notifications/1/mark-read
Content-Type: {{contentType}}

{
  "userId": "bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527"
}

### Mark multiple notifications as read
PATCH {{baseUrl}}/notifications/mark-multiple-read
Content-Type: {{contentType}}

{
  "notificationIds": ["1", "2", "3"],
  "userId": "bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527"
}

### Delete notification
DELETE {{baseUrl}}/notifications/1
Content-Type: {{contentType}}

{
  "userId": "bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527"
}

### Create booking notification
POST {{baseUrl}}/notifications/booking/f7602386-4a35-41f9-8c63-d65b670ca8f2
Content-Type: {{contentType}}

{
  "type": "booking_confirmed",
  "customMessage": "Your premium car wash is confirmed!"
}

### Create fleet notification
POST {{baseUrl}}/notifications/fleet/1
Content-Type: {{contentType}}

{
  "type": "vehicle_dispatched",
  "recipientId": "bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527",
  "customMessage": "Your service vehicle is on the way!"
}

### Create promotional notification
POST {{baseUrl}}/notifications/promotional
Content-Type: {{contentType}}

{
  "recipientIds": ["bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527"],
  "title": "Special Discount!",
  "message": "Get 20% off your next car wash service. Book now!",
  "serviceId": "3918f3f8-529d-4522-9e81-87d37f9c7256",
  "imageUrl": "https://example.com/promotion.jpg"
}

### Create bulk notifications
POST {{baseUrl}}/notifications/bulk
Content-Type: {{contentType}}

{
  "recipientIds": ["bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527"],
  "notificationData": {
    "title": "System Maintenance",
    "message": "The app will be under maintenance from 2 AM to 4 AM tomorrow",
    "type": "general",
    "priority": "medium",
    "channels": ["in_app", "email"]
  }
}

### ========== PAYMENTS ==========

### Create a new payment (Manual creation)
POST {{baseUrl}}/payments
Content-Type: {{contentType}}

{
  "amount": 50.00,
  "status": "pending",
  "payment_method": "Card",
  "transaction_id": "test_txn_123",
  "bookingId": "5e2e8914-0286-40c4-a822-c6f23143969f"
}

### Get all payments
GET {{baseUrl}}/payments

### Get payment statistics
GET {{baseUrl}}/payments/statistics

### Get payments with user filter
GET {{baseUrl}}/payments?userId=bb8d2a1b-cc88-4a55-a9fc-7e3b2952c527

### Get payment by ID
GET {{baseUrl}}/payments/payment-uuid-here

### Get payments by booking ID
GET {{baseUrl}}/payments/booking/5e2e8914-0286-40c4-a822-c6f23143969f

### Initialize payment for a booking
POST {{baseUrl}}/payments/initialize
Authorization: Bearer {{AccessToken}}
Content-Type: {{contentType}}

{
  "bookingId": "5e2e8914-0286-40c4-a822-c6f23143969f",
  "email": "user@duck.com"
}

### Initialize payment for premium service
POST {{baseUrl}}/payments/initialize
Content-Type: {{contentType}}

{
  "bookingId": "5e2e8914-0286-40c4-a822-c6f23143969f",
  "email": "andreastailas96@gmail.com"
}

### Verify payment transaction
POST {{baseUrl}}/payments/verify
Content-Type: {{contentType}}

{
  "reference": "paystack_reference_here"
}

### Verify payment with sample reference
POST {{baseUrl}}/payments/verify
Content-Type: {{contentType}}

{
  "reference": "5rpq8rndk9"
}

### Update payment
PATCH {{baseUrl}}/payments/payment-uuid-here
Content-Type: {{contentType}}

{
  "status": "completed"
}

### Cancel pending payment
POST {{baseUrl}}/payments/payment-uuid-here/cancel

### Refund payment
POST {{baseUrl}}/payments/payment-uuid-here/refund
Content-Type: {{contentType}}

{
  "reason": "Customer request"
}

### Get payment by transaction ID
GET {{baseUrl}}/payments/transaction/paystack_reference_here

### Delete payment
DELETE {{baseUrl}}/payments/payment-uuid-here

### Paystack Webhook (for testing)
POST {{baseUrl}}/payments/webhook
Content-Type: {{contentType}}

{
  "event": "charge.success",
  "data": {
    "reference": "paystack_reference_here",
    "amount": 5000,
    "status": "success",
    "customer": {
      "email": "customer@example.com"
    }
  }
}

### Failed payment webhook
POST {{baseUrl}}/payments/webhook
Content-Type: {{contentType}}

{
  "event": "charge.failed",
  "data": {
    "reference": "paystack_reference_here",
    "amount": 5000,
    "status": "failed"
  }
}

### ========== M-PESA PAYMENTS ==========

### Initialize M-Pesa STK Push Payment
POST {{baseUrl}}/payments/mpesa/initialize
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "bookingId": "591ff6fb-e8c9-456d-9c26-42e0084bac84",
  "amount": 1500,
  "phoneNumber": "254745397503"
}

### Initialize M-Pesa payment with test failure number
POST {{baseUrl}}/payments/mpesa/initialize
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "bookingId": "5e2e8914-0286-40c4-a822-c6f23143969f",
  "amount": 100,
  "phoneNumber": "254711049523",
  "description": "Test failed payment"
}

### Verify M-Pesa Payment Status
POST {{baseUrl}}/payments/mpesa/verify
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "checkoutRequestId": "ws_CO_15072025160106049745397503"
}

### M-Pesa Callback Webhook (Safaricom sends this)
POST {{baseUrl}}/payments/mpesa/callback
Content-Type: {{contentType}}

{
  "Body": {
    "stkCallback": {
      "MerchantRequestID": "29115-34620561-1",
      "CheckoutRequestID": "ws_CO_15072025160106049745397503",
      "ResultCode": 0,
      "ResultDesc": "The service request is processed successfully.",
      "CallbackMetadata": {
        "Item": [
          {
            "Name": "Amount",
            "Value": 1500
          },
          {
            "Name": "MpesaReceiptNumber",
            "Value": "NLJ7RT61SV"
          },
          {
            "Name": "TransactionDate",
            "Value": 20250115154500
          },
          {
            "Name": "PhoneNumber",
            "Value": 254708374149
          }
        ]
      }
    }
  }
}

### M-Pesa Failed Payment Callback
POST {{baseUrl}}/payments/mpesa/callback
Content-Type: {{contentType}}

{
  "Body": {
    "stkCallback": {
      "MerchantRequestID": "29115-34620561-2",
      "CheckoutRequestID": "ws_CO_DMZ_123456789_12345678901234567891",
      "ResultCode": 1032,
      "ResultDesc": "Request cancelled by user"
    }
  }
}

### ========== STRIPE PAYMENTS ==========

### Initialize Stripe Payment Intent
POST {{baseUrl}}/payments/stripe/initialize
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "bookingId": "591ff6fb-e8c9-456d-9c26-42e0084bac84",
  "email": "customer@example.com",
  "amount": 2500,
  "currency": "usd"
}

### Initialize Stripe Payment Intent with EUR
POST {{baseUrl}}/payments/stripe/initialize
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "bookingId": "591ff6fb-e8c9-456d-9c26-42e0084bac84",
  "email": "european.customer@example.com",
  "amount": 2000,
  "currency": "eur"
}

### Initialize Stripe Payment with Success/Cancel URLs (Checkout Session)
POST {{baseUrl}}/payments/stripe/initialize
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "bookingId": "591ff6fb-e8c9-456d-9c26-42e0084bac84",
  "email": "customer@example.com",
  "amount": 3000,
  "currency": "usd",
  "successUrl": "https://yourapp.com/payment/success?session_id={CHECKOUT_SESSION_ID}",
  "cancelUrl": "https://yourapp.com/payment/cancelled",
  "customerName": "John Doe"
}

### Initialize Stripe Payment for KES
POST {{baseUrl}}/payments/stripe/initialize
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "bookingId": "5e2e8914-0286-40c4-a822-c6f23143969f",
  "email": "kenyan.customer@example.com",
  "amount": 150000,
  "currency": "kes"
}

### Verify Stripe Payment Intent
POST {{baseUrl}}/payments/stripe/verify
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "sessionId": "pi_1234567890abcdef"
}

### Verify Stripe Checkout Session  
POST {{baseUrl}}/payments/stripe/verify
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "sessionId": "cs_test_a14biP0iJ7Mn9f2SXbrTaZZIpv4o8V4Jv3KNDdow5ki5i07veKRoMKEWdT"
}

### Stripe Webhook - Payment Intent Succeeded
POST {{baseUrl}}/payments/stripe/webhook
Content-Type: {{contentType}}
Stripe-Signature: t=1234567890,v1=test_signature

{
  "id": "evt_1234567890abcdef",
  "object": "event",
  "type": "payment_intent.succeeded",
  "data": {
    "object": {
      "id": "pi_1234567890abcdef",
      "amount": 2500,
      "currency": "usd",
      "status": "succeeded",
      "metadata": {
        "bookingId": "5e2e8914-0286-40c4-a822-c6f23143969f"
      }
    }
  }
}

### Stripe Webhook - Payment Intent Failed
POST {{baseUrl}}/payments/stripe/webhook
Content-Type: {{contentType}}
Stripe-Signature: t=1234567890,v1=test_signature

{
  "id": "evt_1234567890abcdef",
  "object": "event",
  "type": "payment_intent.payment_failed",
  "data": {
    "object": {
      "id": "pi_1234567890abcdef",
      "amount": 2500,
      "currency": "usd",
      "status": "requires_payment_method",
      "last_payment_error": {
        "message": "Your card was declined."
      },
      "metadata": {
        "bookingId": "5e2e8914-0286-40c4-a822-c6f23143969f"
      }
    }
  }
}

### Stripe Webhook - Checkout Session Completed
POST {{baseUrl}}/payments/stripe/webhook
Content-Type: {{contentType}}
Stripe-Signature: t=1234567890,v1=test_signature

{
  "id": "evt_1234567890abcdef",
  "object": "event",
  "type": "checkout.session.completed",
  "data": {
    "object": {
      "id": "cs_test_1234567890abcdef",
      "payment_intent": "pi_1234567890abcdef",
      "amount_total": 2500,
      "currency": "usd",
      "payment_status": "paid",
      "metadata": {
        "bookingId": "5e2e8914-0286-40c4-a822-c6f23143969f"
      }
    }
  }
}

### ========== PAYMENT REFUNDS ==========

### Refund Payment (works for all payment types)
POST {{baseUrl}}/payments/payment-uuid-here/refund
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "reason": "Customer requested refund"
}

### Refund Payment with specific reason
POST {{baseUrl}}/payments/payment-uuid-here/refund  
Content-Type: {{contentType}}
Authorization: Bearer {{AccessToken}}

{
  "reason": "Service not delivered"
}

### ========== PAYMENT HISTORY & ANALYTICS ==========

### Get Payment History by Booking ID
GET {{baseUrl}}/payments/booking/591ff6fb-e8c9-456d-9c26-42e0084bac84
Authorization: Bearer {{AccessToken}}

### Get Payment Statistics
GET {{baseUrl}}/payments/statistics
Authorization: Bearer {{AccessToken}}

### Delete Payment
DELETE {{baseUrl}}/payments/8947efa3-4b09-4cff-8851-5d67e81833bd
Authorization: Bearer {{AccessToken}}

### ========== TESTING VARIABLES ==========

# Test M-Pesa Phone Numbers (Sandbox):
# Success: 254708374149
# Failure: 254711049523
# Any amount between 1 and 70000

# Test Stripe Cards:
# Success: 4242424242424242
# Decline: 4000000000000002
# Insufficient funds: 4000000000009995
# 3D Secure: 4000000000003220

# Test Amounts:
# Small: 100 (KES 1.00 / USD 1.00)
# Medium: 1500 (KES 15.00 / USD 15.00)  
# Large: 5000 (KES 50.00 / USD 50.00)

### ========== API DOCUMENTATION ==========

### Access Swagger Documentation
GET {{baseUrl}}/api/docs